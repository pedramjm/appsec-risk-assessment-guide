V12	Files	12.1.1	Verify that the application will not accept large files that could fill up storage or cause a denial of service attack.
V12	Files	12.1.2	Verify that compressed files are checked for "zip bombs" - small input files that will decompress into huge files thus exhausting file storage limits.
V12	Files	12.1.3	Verify that a file size quota and maximum number of files per user is enforced to ensure that a single user cannot fill up the storage with too many files, or excessively large files.
V12	Files	12.2.1	Verify that files obtained from untrusted sources are validated to be of expected type based on the file's content.
V12	Files	12.3.1	Verify that user-submitted filename metadata is not used directly with system or framework file and URL API to protect against path traversal.
V12	Files	12.3.2	Verify that user-submitted filename metadata is validated or ignored to prevent the disclosure, creation, updating or removal of local files (LFI).
V12	Files	12.3.3	Verify that user-submitted filename metadata is validated or ignored to prevent the disclosure or execution of remote files (RFI), which may also lead to SSRF.
V12	Files	12.3.4	Verify that the application protects against reflective file download (RFD) by validating or ignoring user-submitted filenames in a JSON, JSONP, or URL parameter, the response Content-Type header should be set to text/plain, and the Content-Disposition header should have a fixed filename.
V12	Files	12.3.5	Verify that untrusted file metadata is not used directly with system API or libraries, to protect against OS command injection.
V12	Files	12.3.6	Verify that the application does not include and execute functionality from untrusted sources, such as unverified content distribution networks, JavaScript libraries, node npm libraries, or server-side DLLs.
V12	Files	12.4.1	Verify that files obtained from untrusted sources are stored outside the web root, with limited permissions, preferably with strong validation.
V12	Files	12.4.2	Verify that files obtained from untrusted sources are scanned by antivirus scanners to prevent upload of known malicious content.
V12	Files	12.5.1	Verify that the web tier is configured to serve only files with specific file extensions to prevent unintentional information and source code leakage. For example, backup files (e.g. .bak), temporary working files (e.g. .swp), compressed files (.zip, .tar.gz, etc) and other extensions commonly used by editors should be blocked unless required.
V12	Files	12.5.2	Verify that direct requests to uploaded files will never be executed as HTML/JavaScript content.
V12	Files	12.6.1	Verify that the web or application server is configured with a whitelist of resources or systems to which the server can send requests or load data/files from.



-----------------------------

This includes the following:

7.1 File upload  
7.2 File integrity  
7.3 File execution  
7.4 File storage  
7.5 File download  

7.6 Size limits
7.7 Rate limiting
7.8 File types, headers and extensions
