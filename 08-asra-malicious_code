V10	Malicious	10.1.1	Verify that a code analysis tool is in use that can detect potentially malicious code, such as time functions, unsafe file operations and network connections.
V10	Malicious	10.2.1	Verify that the application source code and third party libraries do not contain unauthorized phone home or data collection capabilities. Where such functionality exists, obtain the user's permission for it to operate  before collecting any data.
V10	Malicious	10.2.2	Verify that the application does not ask for unnecessary or excessive permissions to privacy related features or sensors, such as contacts, cameras, microphones, or location.
V10	Malicious	10.2.3	Verify that the application source code and third party libraries do not contain back doors, such as hard-coded or additional undocumented accounts or keys, code obfuscation, undocumented binary blobs, rootkits, or anti-debugging, insecure debugging features, or otherwise out of date, insecure, or hidden functionality that could be used maliciously if discovered.
V10	Malicious	10.2.4	Verify that the application source code and third party libraries does not contain time bombs by searching for date and time related functions.
V10	Malicious	10.2.5	Verify that the application source code and third party libraries does not contain malicious code, such as salami attacks, logic bypasses, or logic bombs.
V10	Malicious	10.2.6	Verify that the application source code and third party libraries do not contain Easter eggs or any other potentially unwanted functionality.
V10	Malicious	10.3.1	Verify that if the application has a client or server auto-update feature, updates should be obtained over secure channels and digitally signed. The update code must validate the digital signature of the update before installing or executing the update.
V10	Malicious	10.3.2	Verify that the application employs integrity protections, such as code signing or sub-resource integrity. The application must not load or execute code from untrusted sources, such as loading includes, modules, plugins, code, or libraries from untrusted sources or the Internet.
V10	Malicious	10.3.3	Verify that the application has protection from sub-domain takeovers if the application relies upon DNS entries or DNS sub-domains, such as expired domain names, out of date DNS pointers or CNAMEs, expired projects at public source code repos, or transient cloud APIs, serverless functions, or storage buckets (autogen-bucket-id.cloud.example.com) or similar. Protections can include ensuring that DNS names used by applications are regularly checked for expiry or change.



-----------------

This includes the following:

8.1 Security testing tools and methodology
-      IDE scanning
-      static code scanning
-      peer review
-      automated testing 
-      vulnerability scanning
-      penetration testing

8.2 OWASP Top 10

8.3 Hard-coded secrets

8.4 Third-party code / open source software

8.5 Software updates

8.6 Code signing
